
package org.view;

import com.sun.glass.events.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.controller.MedicineDAO;
import org.controller.SupplierDAO;
import org.controller.TypeDAO;
import org.model.Medicine;
import org.model.Suppliers;

/**
 *
 * @author Amil
 */
public class AddMedicine extends javax.swing.JInternalFrame {
    DefaultTableModel model;
HashMap <String,Integer>smap;
HashMap <String,Integer>tmap;

    /**
     * Creates new form AddProducts
     */
    public AddMedicine() {
        initComponents();
        jLabel1.setVisible(false);
        jTextField1_MedicineId.setVisible(false);
        loadSupplier();
       loadType();
        model =new DefaultTableModel(null,new String[]{"Id","GName","SName","BatchId", "Chemical Composition",
            "CP","SP","ExpDate","MfgDate","Dose","Quantity","pStatus","Suppliers","Type"});
        jTable1.setModel(model);
    }
    public void loadSupplier(){
    SupplierDAO sDAO=new SupplierDAO();
    smap =sDAO.fetchSupplier();
    for(Map.Entry<String,Integer> m:smap.entrySet()){
        jComboBox1_Supplier.addItem(m.getKey());
    }
    
}
public void loadType(){
   TypeDAO cDAO=new TypeDAO();
    tmap =cDAO.fetchType();
    for(Map.Entry<String,Integer> m:tmap.entrySet()){
        jComboBox2_Type.addItem(m.getKey());
    } 
}
public void loadData(){
    clearModel();
   MedicineDAO  mDAO =new MedicineDAO();
   ArrayList<Medicine>cList=mDAO.fetchData();
   for(int i=0;i<cList.size();i++){
       
  
   model.addRow(new Object[] {cList.get(i).getMedicineId(),cList.get(i).getGenericName(),cList.get(i).getSpecificName(),cList.get(i).getBatchId(),cList.get(i).getChemicalComposition(),
       cList.get(i).getCostPricePerUnit(),cList.get(i).getSellingPricePerUnits(),cList.get(i).getExpDate(),cList.get(i).getMfgDate(),cList.get(i).getDose(),
 cList.get(i).getQuantity(),cList.get(i).getPescriptionStatus(),cList.get(i).getSupplier(),cList.get(i).getType()});
            }
           }
public void clearModel(){
    int count =model.getRowCount();
    for(int i=0;i<count;i++){
        model.removeRow(0);
    }
}
public void clearLabel(){
    jLabel3.setText("");
     jLabel14.setText("");
     jLabel17.setText("");
     jLabel18.setText("");
     jLabel19.setText("");
     jLabel20.setText("");
     jLabel21.setText("");
     jLabel22.setText("");
     jLabel23.setText("");
     jLabel24.setText("");
}
public void clearText(){
 jTextField1_MedicineId.setText("");
        jTextField11_Dose.setText("");
        jTextField13_Quantity.setText("");
        jTextField3_GenericName.setText("");
        jTextField5_BatchId.setText("");
        jTextField4_SpecificName.setText("");
        jTextField6_ChemicalComposition.setText("");
        jTextField7_CostPrice.setText("");
        jTextField8_SellingPrice.setText("");
jDateChooser1.setCalendar(null);
jDateChooser2.setCalendar(null);   
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox1_Supplier = new javax.swing.JComboBox<>();
        jTextField1_MedicineId = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jComboBox2_Type = new javax.swing.JComboBox<>();
        jTextField3_GenericName = new javax.swing.JTextField();
        jTextField4_SpecificName = new javax.swing.JTextField();
        jTextField5_BatchId = new javax.swing.JTextField();
        jTextField6_ChemicalComposition = new javax.swing.JTextField();
        jTextField7_CostPrice = new javax.swing.JTextField();
        jTextField8_SellingPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField11_Dose = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton2_Save = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField13_Quantity = new javax.swing.JTextField();
        jButton1_Show = new javax.swing.JButton();
        jButton5_Clear = new javax.swing.JButton();
        jCheckBox1_PrescriptionStatus = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel25 = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("CostPrice Per Unit");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Selling Price Per Unit");

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Exp Date");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Mfg Date");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Prescription  Status");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Quantity");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Supplier");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Dose");

        jComboBox1_Supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1_SupplierActionPerformed(evt);
            }
        });

        jTextField1_MedicineId.setEditable(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Type");

        jTextField3_GenericName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField3_GenericName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3_GenericNameActionPerformed(evt);
            }
        });
        jTextField3_GenericName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3_GenericNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3_GenericNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3_GenericNameKeyTyped(evt);
            }
        });

        jTextField4_SpecificName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4_SpecificNameActionPerformed(evt);
            }
        });
        jTextField4_SpecificName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4_SpecificNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4_SpecificNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4_SpecificNameKeyTyped(evt);
            }
        });

        jTextField5_BatchId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5_BatchIdActionPerformed(evt);
            }
        });
        jTextField5_BatchId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5_BatchIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5_BatchIdKeyTyped(evt);
            }
        });

        jTextField6_ChemicalComposition.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField6_ChemicalCompositionKeyReleased(evt);
            }
        });

        jTextField7_CostPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7_CostPriceActionPerformed(evt);
            }
        });
        jTextField7_CostPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField7_CostPriceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField7_CostPriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField7_CostPriceKeyTyped(evt);
            }
        });

        jTextField8_SellingPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8_SellingPriceActionPerformed(evt);
            }
        });
        jTextField8_SellingPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField8_SellingPriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField8_SellingPriceKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Id");

        jTextField11_Dose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11_DoseActionPerformed(evt);
            }
        });
        jTextField11_Dose.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField11_DoseKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField11_DoseKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Generic Name");

        jButton2_Save.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2_Save.setText("Save");
        jButton2_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2_SaveActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Specific Name");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", "", "", "", "", "", "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, true, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Batch Id");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Chemical Composition");

        jTextField13_Quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13_QuantityActionPerformed(evt);
            }
        });
        jTextField13_Quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField13_QuantityKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField13_QuantityKeyTyped(evt);
            }
        });

        jButton1_Show.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1_Show.setText("Show");
        jButton1_Show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_ShowActionPerformed(evt);
            }
        });

        jButton5_Clear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5_Clear.setText("Clear");
        jButton5_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5_ClearActionPerformed(evt);
            }
        });

        jCheckBox1_PrescriptionStatus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jCheckBox1_PrescriptionStatus.setText("Required ");
        jCheckBox1_PrescriptionStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1_PrescriptionStatusActionPerformed(evt);
            }
        });

        jDateChooser1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jDateChooser1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });

        jDateChooser2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jDateChooser2AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jDateChooser2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser2PropertyChange(evt);
            }
        });
        jDateChooser2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jDateChooser2KeyReleased(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setText("Medicine Information ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(53, 53, 53)
                                        .addComponent(jTextField5_BatchId))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGap(22, 22, 22)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3)
                                            .addComponent(jTextField1_MedicineId, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField3_GenericName, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                                            .addComponent(jTextField4_SpecificName))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel10)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel1))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                                    .addComponent(jTextField8_SellingPrice, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField7_CostPrice, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField6_ChemicalComposition, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox2_Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jComboBox1_Supplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField11_Dose)
                                        .addComponent(jTextField13_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox1_PrescriptionStatus))
                                    .addComponent(jLabel24)))
                            .addComponent(jLabel22))
                        .addGap(64, 64, 64))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5_Clear)
                        .addGap(46, 46, 46)
                        .addComponent(jButton1_Show)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2_Save)
                        .addGap(59, 59, 59))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1_MedicineId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel13)
                            .addComponent(jTextField11_Dose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTextField6_ChemicalComposition, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextField7_CostPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField13_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField8_SellingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jCheckBox1_PrescriptionStatus))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBox1_Supplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(jComboBox2_Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField3_GenericName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField4_SpecificName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField5_BatchId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5_Clear)
                    .addComponent(jButton1_Show)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(jButton2_Save))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField5_BatchIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5_BatchIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5_BatchIdActionPerformed

    private void jTextField7_CostPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7_CostPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7_CostPriceActionPerformed

    private void jTextField8_SellingPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8_SellingPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8_SellingPriceActionPerformed

    private void jTextField11_DoseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11_DoseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11_DoseActionPerformed

    private void jTextField13_QuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13_QuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13_QuantityActionPerformed

    private void jButton2_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2_SaveActionPerformed
  boolean  error=false;  
   boolean error1=false;
 if(jTextField1_MedicineId.getText().equals("")==false){
      JOptionPane.showMessageDialog(null,"Please Clear All Fields First");
      return;
 }
 if(jTextField3_GenericName.getText().trim().isEmpty()){
    jLabel3.setText("Please Enter Generic Name"); 
     error=true;
 }
 if(jTextField4_SpecificName.getText().trim().isEmpty()){
    jLabel14.setText("Please Enter Specific Name"); 
     error=true;
 }
if(jTextField6_ChemicalComposition.getText().trim().isEmpty()){
    jLabel18.setText("Please Enter Chemical  Composition"); 
     error=true;
 }
if(jTextField5_BatchId.getText().trim().isEmpty()){
     jLabel17.setText("Please Enter Batch Number ");
      error=true;
 }
if(jTextField7_CostPrice.getText().trim().isEmpty()){
     jLabel19.setText("Please Enter CostPrice Per Unit");
      error=true;
 }
if(jTextField8_SellingPrice.getText().trim().isEmpty()){
    jLabel20.setText("Please Enter Selling Price Per Unit"); 
     error=true;
 }
 if(jDateChooser1.getDate() == null){
    jLabel22.setText("Please Enter Mfg Date"); 
     error=true; 
 }
 if(jDateChooser2.getDate() == null){
   jLabel21.setText("Please Enter Exp Date");
    error=true;
 }
 if(jTextField11_Dose.getText().trim().isEmpty()){
  jLabel23.setText("Please Enter Dose"); 
 error=true;  
 }
 if( jTextField13_Quantity.getText().trim().isEmpty()){
   jLabel24.setText("Please Enter Quantity");  
    error=true;
 }
        
 if(error==false){
         String genericName =jTextField3_GenericName.getText();
        String specificName=jTextField4_SpecificName.getText();
        String batchId=jTextField5_BatchId.getText();
        String chemicalComposition=jTextField6_ChemicalComposition.getText();
        double costPrice=Double.parseDouble(jTextField7_CostPrice.getText());
        double sellingPrice=Double.parseDouble(jTextField8_SellingPrice.getText());
         Date currentDate = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String date = dateFormat.format(currentDate);
        LocalDate date1=LocalDate.now().plusMonths(6);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String futureDate =date1.format(formatter);    
       SimpleDateFormat date_format1 = new SimpleDateFormat("yyy-MM-dd");
        String expDate = date_format1.format(jDateChooser1.getDate()); 
        SimpleDateFormat date_format2 = new SimpleDateFormat("yyy-MM-dd");
         String mfgDate = date_format2.format(jDateChooser2.getDate());    
        String dose=jTextField11_Dose.getText();
        int quantity=Integer.parseInt(jTextField13_Quantity.getText());
        boolean pescriptionStatus=jCheckBox1_PrescriptionStatus.isSelected();
        int supplierId=smap.get(jComboBox1_Supplier.getSelectedItem().toString());
        int typeId=tmap.get(jComboBox2_Type.getSelectedItem().toString());
     
    if(expDate.compareTo(date)< 0){
      jLabel21.setText("Exp Date should not be occure before current date");
      error1=true;
  }
 if(mfgDate.compareTo(date)> 0){
      jLabel22.setText("Mfg  date should not be occure affter current date");
      error1=true;
  }
   if(expDate.compareTo(futureDate)< 0){
      jLabel21.setText("Exp Date should have 6 month from current date ");
      error1=true;
  }
   if(costPrice>sellingPrice){
    jLabel20.setText("selling Price should  be greater than the cost price ");    
     error1=true;
  }
   if(error1==false){

        //set this value into  model class "Category" object
        Medicine ob=new Medicine();
        if(new MedicineDAO().checkprodut(jTextField5_BatchId.getText())){
            JOptionPane.showMessageDialog(rootPane,"Duplicate entry ");
        }
        else{
        ob.setGenericName(genericName);
        ob.setSpecificName(specificName);
        ob.setBatchId(batchId);
        ob.setChemicalComposition(chemicalComposition);
        ob.setCostPricePerUnit(costPrice);
        ob.setSellingPricePerUnits(sellingPrice);
        ob.setExpDate(expDate);
        ob.setMfgDate(mfgDate);
        ob.setDose(dose);
        ob.setQuantity(quantity);
        ob.setPescriptionStatus(pescriptionStatus);
        ob.setSuppliersId(supplierId);
        ob.setTypesID(typeId);   
        //hand over this model class object to  controller class
        MedicineDAO mDAO=new MedicineDAO();             
        int result = mDAO.saveData(ob);
      
        if(result==1){
            JOptionPane.showMessageDialog(rootPane,"Recorde Save");
        }
        else{
            JOptionPane.showMessageDialog(rootPane,"Recorde not Save");
        }
        }
    loadData();
       
        //empty Textfield
        clearLabel();
clearText();
   }        
  }
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2_SaveActionPerformed

    private void jTextField4_SpecificNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4_SpecificNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4_SpecificNameActionPerformed

    private void jButton5_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5_ClearActionPerformed
        jLabel1.setVisible(false);
        jTextField1_MedicineId.setVisible(false);        
        clearText();
        clearLabel();
       // TODO add your handling code here:
    }//GEN-LAST:event_jButton5_ClearActionPerformed

    private void jCheckBox1_PrescriptionStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1_PrescriptionStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1_PrescriptionStatusActionPerformed

    private void jComboBox1_SupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1_SupplierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1_SupplierActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   clearLabel();
    boolean  error=false;  
   boolean error1=false;
if(!jTextField1_MedicineId.getText().trim().isEmpty()){
  if(jTextField3_GenericName.getText().trim().isEmpty()&&
         jTextField4_SpecificName.getText().trim().isEmpty()&&
         jTextField6_ChemicalComposition.getText().trim().isEmpty()&&
         jTextField5_BatchId.getText().trim().isEmpty()&&
         jTextField7_CostPrice.getText().trim().isEmpty()&&
         jTextField8_SellingPrice.getText().trim().isEmpty()&&
        jDateChooser1.getDate() == null&&
         jDateChooser2.getDate()==null&&
         jTextField11_Dose.getText().trim().isEmpty()&&
         jTextField13_Quantity.getText().trim().isEmpty()      
         )
 {
     jLabel3.setText("Please Enter Generic Name");
     jLabel14.setText("Please Enter Specific Name");
     jLabel17.setText("Please Enter Batch Number ");
     jLabel18.setText("Please Enter Chemical  Composition");
     jLabel19.setText("Please Enter CostPrice Per Unit");
     jLabel20.setText("Please Enter Selling Price Per Unit");
     jLabel21.setText("Please Enter Exp Date");
     jLabel22.setText("Please Enter Mfg Date");
     jLabel23.setText("Please Enter Dose");
     jLabel24.setText("Please Enter Quantity"); 
     error=true;
 }
 if(jTextField3_GenericName.getText().trim().isEmpty()){
    jLabel3.setText("Please Enter Generic Name"); 
     error=true;
 }
 if(jTextField4_SpecificName.getText().trim().isEmpty()){
    jLabel14.setText("Please Enter Specific Name"); 
     error=true;
 }
if(jTextField6_ChemicalComposition.getText().trim().isEmpty()){
    jLabel18.setText("Please Enter Chemical  Composition"); 
     error=true;
 }
if(jTextField5_BatchId.getText().trim().isEmpty()){
     jLabel17.setText("Please Enter Batch Number ");
      error=true;
 }
if(jTextField7_CostPrice.getText().trim().isEmpty()){
     jLabel19.setText("Please Enter CostPrice Per Unit");
      error=true;
 }
if(jTextField8_SellingPrice.getText().trim().isEmpty()){
    jLabel20.setText("Please Enter Selling Price Per Unit"); 
     error=true;
 }
 if(jDateChooser1.getDate() == null){
    jLabel21.setText("Please Enter Mfg Date"); 
     error=true; 
 }
 if(jDateChooser2.getDate() == null){
   jLabel22.setText("Please Enter Exp Date");
    error=true;
 }
 if(jTextField11_Dose.getText().trim().isEmpty()){
  jLabel23.setText("Please Enter Dose"); 
 error=true;  
 }
 if( jTextField13_Quantity.getText().trim().isEmpty()){
   jLabel24.setText("Please Enter Quantity");  
    error=true;
          
 } 
 if(error==false){
     int id=Integer.parseInt(jTextField1_MedicineId.getText());
         String genericName =jTextField3_GenericName.getText();
        String specificName=jTextField4_SpecificName.getText();
        String batchId=jTextField5_BatchId.getText();
        String chemicalComposition=jTextField6_ChemicalComposition.getText();
        double costPrice=Double.parseDouble(jTextField7_CostPrice.getText());
        double sellingPrice=Double.parseDouble(jTextField8_SellingPrice.getText());
         Date currentDate = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String date = dateFormat.format(currentDate);
        LocalDate date1=LocalDate.now().plusMonths(6);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String futureDate =date1.format(formatter);    
       SimpleDateFormat date_format1 = new SimpleDateFormat("yyy-MM-dd");
        String expDate = date_format1.format(jDateChooser1.getDate()); 
        SimpleDateFormat date_format2 = new SimpleDateFormat("yyy-MM-dd");
         String mfgDate = date_format2.format(jDateChooser2.getDate());    
        String dose=jTextField11_Dose.getText();
        int quantity=Integer.parseInt(jTextField13_Quantity.getText());
        boolean pescriptionStatus=jCheckBox1_PrescriptionStatus.isSelected();
        int supplierId=smap.get(jComboBox1_Supplier.getSelectedItem().toString());
        int typeId=tmap.get(jComboBox2_Type.getSelectedItem().toString());
        
    if(expDate.compareTo(date)< 0){
      jLabel21.setText("Exp Date should not be occure before current date");
      error1=true;
  }
 if(mfgDate.compareTo(date)> 0){
      jLabel22.setText("Mfg  date should not be occure affter current date");
      error1=true;
  }
   if(expDate.compareTo(futureDate)< 0){
      jLabel21.setText("Exp Date should have 6 month from current date ");
      error1=true;
  }
   if(costPrice>sellingPrice){
    jLabel20.setText("selling Price should  be greater than the cost price ");    
     error1=true;
  }
   System.out.println(error1);
   if(error1==false){

        //set this value into  model class "Category" object
        Medicine ob=new Medicine();
         if(new MedicineDAO().checkprodut(jTextField5_BatchId.getText())){
            JOptionPane.showMessageDialog(rootPane,"Duplicate entry ");
        }
         else{
             
        
        ob.setMedicineId(id);
        ob.setGenericName(genericName);
        ob.setSpecificName(specificName);
        ob.setBatchId(batchId);
        ob.setChemicalComposition(chemicalComposition);
        ob.setCostPricePerUnit(costPrice);
        ob.setSellingPricePerUnits(sellingPrice);
        ob.setExpDate(expDate);
        ob.setMfgDate(mfgDate);
        ob.setDose(dose);
        ob.setQuantity(quantity);
        ob.setPescriptionStatus(pescriptionStatus);
        ob.setSuppliersId(supplierId);
        ob.setTypesID(typeId);   
        //hand over this model class object to  controller class
        MedicineDAO mDAO=new MedicineDAO();
        int result =mDAO.updateRecord(ob);  
        if(result==1){
            JOptionPane.showMessageDialog(rootPane,"Update Save");
        }
        else{
            JOptionPane.showMessageDialog(rootPane,"Recorde not Update");
        }
         }
        loadData();
        //empty Textfield
        clearLabel();
        clearText();
        
   }        
 }
}
else{
 JOptionPane.showMessageDialog(rootPane,"Please select medicine First");    
}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
 clearLabel();
 jLabel1.setVisible(true);
        jTextField1_MedicineId.setVisible(true);
        int row =jTable1.getSelectedRow();
 jTextField1_MedicineId.setText(jTable1.getValueAt(row,0).toString());
        jTextField3_GenericName.setText(jTable1.getValueAt(row,1).toString());
        jTextField4_SpecificName.setText(jTable1.getValueAt(row,2).toString());
        jTextField5_BatchId.setText(jTable1.getValueAt(row,3).toString());
         jTextField6_ChemicalComposition.setText(jTable1.getValueAt(row,4).toString());
          jTextField7_CostPrice.setText(jTable1.getValueAt(row,5).toString());
          jTextField8_SellingPrice.setText(jTable1.getValueAt(row,6).toString());
        try {
            Date date1=new SimpleDateFormat("yyyy-MM-dd").parse(jTable1.getValueAt(row,7).toString());
            jDateChooser1.setDate(date1);
        } catch (ParseException ex) {
            Logger.getLogger(AddMedicine.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Date date2=new SimpleDateFormat("yyyy-MM-dd").parse(jTable1.getValueAt(row,8).toString());
            jDateChooser2.setDate(date2);
        } catch (ParseException ex) {
            Logger.getLogger(AddMedicine.class.getName()).log(Level.SEVERE, null, ex);
        }
          jTextField11_Dose.setText(jTable1.getValueAt(row,9).toString());
          jTextField13_Quantity.setText(jTable1.getValueAt(row,10).toString());
        jCheckBox1_PrescriptionStatus.setSelected(Boolean.parseBoolean(jTable1.getValueAt(row,11).toString()));
       jComboBox1_Supplier.setSelectedItem(jTable1.getValueAt(row, 12).toString());
       jComboBox2_Type.setSelectedItem(jTable1.getValueAt(row, 13).toString());
 // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1_ShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_ShowActionPerformed
         clearLabel();
        loadData();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1_ShowActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
 
 if(!jTextField1_MedicineId.getText().trim().isEmpty()){
   int answer = JOptionPane.showConfirmDialog(rootPane,"Are you Sure???", "Conformation", JOptionPane.YES_NO_OPTION);
if (answer==0)
{
     int id=Integer.parseInt(jTextField1_MedicineId.getText());
     Medicine ob=new Medicine();
     ob.setMedicineId(id);
     MedicineDAO mDAO=new MedicineDAO();
     int result = mDAO.deleteRecord(ob);
        if(result==1){
            JOptionPane.showMessageDialog(rootPane,"Medicine delete");
        }
        else{
            JOptionPane.showMessageDialog(rootPane,"Cannot delete a parent row: a foreign key constraint fails");
        }
        loadData();
    
}
else 
{
} 
 }
 else{
     JOptionPane.showMessageDialog(rootPane,"Please select medicine First");
 }

// TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField3_GenericNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3_GenericNameKeyPressed
  
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3_GenericNameKeyPressed

    private void jTextField4_SpecificNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4_SpecificNameKeyPressed
char c=evt.getKeyChar();

    if(!(Character.isAlphabetic(c) ||  (c==KeyEvent.VK_BACKSPACE)||  c==KeyEvent.VK_DELETE ))
        evt.consume();        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4_SpecificNameKeyPressed

    private void jTextField7_CostPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7_CostPriceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7_CostPriceKeyPressed

    private void jTextField3_GenericNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3_GenericNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3_GenericNameActionPerformed

    private void jTextField3_GenericNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3_GenericNameKeyTyped
 char c=evt.getKeyChar();

    if(!(Character.isAlphabetic(c) ||  (c==KeyEvent.VK_BACKSPACE)||  c==KeyEvent.VK_DELETE ))
        evt.consume();       // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3_GenericNameKeyTyped

    private void jTextField4_SpecificNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4_SpecificNameKeyTyped
     char c=evt.getKeyChar();

    if(!(Character.isAlphabetic(c) ||  (c==KeyEvent.VK_BACKSPACE)||  c==KeyEvent.VK_DELETE ))
        evt.consume();    // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4_SpecificNameKeyTyped

    private void jTextField7_CostPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7_CostPriceKeyTyped
     char c=evt.getKeyChar();
        if((Character.isDigit(c))||(c==KeyEvent.VK_PERIOD)||(c==KeyEvent.VK_BACKSPACE)){
            int punto=0;
            if(c==KeyEvent.VK_PERIOD){ 
                        String s=jTextField7_CostPrice.getText();
                        int dot=s.indexOf('.');
                        punto=dot;
                        if(dot!=-1){
                            getToolkit().beep();
                            evt.consume();
                        }
                    }
        }
        else{    
            getToolkit().beep();
            evt.consume();
        }   // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7_CostPriceKeyTyped

    private void jTextField8_SellingPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8_SellingPriceKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((Character.isDigit(c))||(c==KeyEvent.VK_PERIOD)||(c==KeyEvent.VK_BACKSPACE)){
            int punto=0;
            if(c==KeyEvent.VK_PERIOD){ 
                        String s=jTextField7_CostPrice.getText();
                        int dot=s.indexOf('.');
                        punto=dot;
                        if(dot!=-1){
                            getToolkit().beep();
                            evt.consume();
                        }
                    }
        }
        else{    
            getToolkit().beep();
            evt.consume();
        } 
    }//GEN-LAST:event_jTextField8_SellingPriceKeyTyped

    private void jTextField13_QuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13_QuantityKeyTyped
        // TODO add your handling code here:
           char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_jTextField13_QuantityKeyTyped

    private void jTextField3_GenericNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3_GenericNameKeyReleased
 jLabel3.setText("");
         // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3_GenericNameKeyReleased

    private void jTextField4_SpecificNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4_SpecificNameKeyReleased
    jLabel14.setText("");
             // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4_SpecificNameKeyReleased

    private void jTextField5_BatchIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5_BatchIdKeyReleased
 jLabel17.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5_BatchIdKeyReleased

    private void jTextField6_ChemicalCompositionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6_ChemicalCompositionKeyReleased
    jLabel18.setText("");
    }//GEN-LAST:event_jTextField6_ChemicalCompositionKeyReleased

    private void jTextField7_CostPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7_CostPriceKeyReleased
          jLabel19.setText("");

    }//GEN-LAST:event_jTextField7_CostPriceKeyReleased

    private void jTextField8_SellingPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8_SellingPriceKeyReleased
        // TODO add your handling code here:
         jLabel20.setText("");

    }//GEN-LAST:event_jTextField8_SellingPriceKeyReleased

    private void jTextField11_DoseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11_DoseKeyReleased
        // TODO add your handling code here:
             jLabel23.setText("");
 
    }//GEN-LAST:event_jTextField11_DoseKeyReleased

    private void jTextField13_QuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13_QuantityKeyReleased
        // TODO add your handling code here:
            jLabel24.setText("");
    }//GEN-LAST:event_jTextField13_QuantityKeyReleased

    private void jDateChooser2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser2KeyReleased
      // TODO add your handling code here:
      jLabel22.setText("");  
    }//GEN-LAST:event_jDateChooser2KeyReleased

    private void jDateChooser1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jDateChooser1AncestorAdded
   // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser1AncestorAdded

    private void jDateChooser2AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jDateChooser2AncestorAdded
       // TODO add your handling code here:
    }//GEN-LAST:event_jDateChooser2AncestorAdded

    private void jTextField11_DoseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11_DoseKeyTyped
        // TODO add your handling code here:
          char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_jTextField11_DoseKeyTyped

    private void jTextField5_BatchIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5_BatchIdKeyTyped
char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||  (c==KeyEvent.VK_BACKSPACE)||  c==KeyEvent.VK_DELETE ||Character.isDigit(c) ))
        evt.consume();       // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5_BatchIdKeyTyped

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        if(jDateChooser1.getDate()!=null){
            

        jLabel21.setText("");  
                }
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void jDateChooser2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser2PropertyChange
        // TODO add your handling code here:
        if(jDateChooser1.getDate()!=null){
            

        jLabel22.setText("");  
                }
    }//GEN-LAST:event_jDateChooser2PropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddMedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1_Show;
    private javax.swing.JButton jButton2_Save;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5_Clear;
    private javax.swing.JCheckBox jCheckBox1_PrescriptionStatus;
    private javax.swing.JComboBox<String> jComboBox1_Supplier;
    private javax.swing.JComboBox<String> jComboBox2_Type;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField11_Dose;
    private javax.swing.JTextField jTextField13_Quantity;
    private javax.swing.JTextField jTextField1_MedicineId;
    private javax.swing.JTextField jTextField3_GenericName;
    private javax.swing.JTextField jTextField4_SpecificName;
    private javax.swing.JTextField jTextField5_BatchId;
    private javax.swing.JTextField jTextField6_ChemicalComposition;
    private javax.swing.JTextField jTextField7_CostPrice;
    private javax.swing.JTextField jTextField8_SellingPrice;
    // End of variables declaration//GEN-END:variables
}
